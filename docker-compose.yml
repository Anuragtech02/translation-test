version: "3.8"

services:
  translation-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: strapi-translation-service
    volumes:
      - translation_data:/app/translations
      - translation_cache:/app/translation-cache
      - ./upload-status.json:/app/upload-status.json
    restart: unless-stopped
    command: node fetch-translate.js
    environment:
      - SOURCE_URL=${SOURCE_URL}
      - SOURCE_TOKEN=${SOURCE_TOKEN}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - OUTPUT_DIR=/app/translations
      - CACHE_DIR=/app/translation-cache
      - SOURCE_LOCALE=${SOURCE_LOCALE:-en}
      - TARGET_LANGS=${TARGET_LANGS:-es,fr,de,zh-CN,zh-TW,ja,ru,ar,pl,it,vi,ko}
      - MAX_REPORTS=${MAX_REPORTS:-50}
      - RUN_INTERVAL_MS=${RUN_INTERVAL_MS:-3600000}
    networks:
      - translation-network

  upload-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: strapi-upload-service
    volumes:
      - translation_data:/app/translations
      # Keep using the bind mount if it works, or switch to named volume
      - ./upload-status.json:/app/upload-status.json
    restart: unless-stopped
    command: node uploadService.js # Keep this command
    environment:
      - TARGET_URL=${TARGET_URL}
      - TARGET_TOKEN=${TARGET_TOKEN}
      - OUTPUT_DIR=/app/translations # Ensure this matches TRANSLATIONS_DIR
      - UPLOAD_DELAY_MS=${UPLOAD_DELAY_MS:-500}
      - MAX_RETRIES=${MAX_RETRIES:-3}
      - RETRY_DELAY_MS=${RETRY_DELAY_MS:-2000}
      # Add the new variable (e.g., check every 2 minutes)
      - UPLOAD_CHECK_INTERVAL_MS=${UPLOAD_CHECK_INTERVAL_MS:-120000}
    depends_on:
      - translation-service
    networks:
      - translation-network

  translation-viewer:
    build:
      context: .
      dockerfile: translation-viewer/Dockerfile
    container_name: translation-viewer
    volumes:
      - translation_data:/app/translations
      - ./upload-status.json:/app/upload-status.json
    environment:
      - PORT=3000
      - TRANSLATIONS_DIR=/app/translations
    ports:
      - "3000:3000"
    restart: unless-stopped
    networks:
      - translation-network
    labels:
      - traefik.enable=true
      - traefik.http.routers.translation-viewer.rule=Host(`${COOLIFY_FQDN}`)
      - traefik.http.routers.translation-viewer.entryPoints=http

networks:
  translation-network:
    driver: bridge

volumes:
  translation_data:
  translation_cache:
